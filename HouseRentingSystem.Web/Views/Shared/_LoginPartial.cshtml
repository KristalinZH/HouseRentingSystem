@using Microsoft.AspNetCore.Identity
@using HouseRentingSystem.Data.Models;
@using HouseRentingSystem.Services.Data.Interfaces;
@using HouseRentingSystem.Web.Infrastructure.Extensions;
@inject IAgentService agentService;
@inject IUserService userService;
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
	string? userId = User.GetId();
	bool isUserAgent = userId != null ? await agentService.AgentExistsByUserIdAsync(userId) : false;
	string userFullname = userId != null ? await userService.GetFullNameByEmailAsync(User.Identity!.Name!) : string.Empty;
}
<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @userFullname</a>
		</li>
		@if (!isUserAgent)
		{
			<li class="nav-item">
				<a class="nav-link text-dark" asp-area="" asp-controller="Agent" asp-action="Become">Become Agent</a>
			</li>
		}
		<li class="nav-item">
			<form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" asp-area="" asp-controller="User" asp-action="Login">Login</a>
		</li>
	}
</ul>
